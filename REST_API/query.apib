FORMAT: 1A
HOST: http://www.openehr.org/api/v1

<!-- include(overview.apib) -->

# Group Query 

## Query [/query]

### Execute AQL query [GET /query/?aql={aql}]

Execute the AQL query supplied in the aql parameter and return result.

```sql
select
a_a/data[at0002]/events[at0003]/time as When,
a_a/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value as Temperature
from EHR e contains COMPOSITION a CONTAINS OBSERVATION a_a[openEHR-EHR-OBSERVATION.body_temperature.v1]
order by a_a/data[at0002]/events[at0003]/time desc
offset 0 limit 2
```

+ Parameters 
    + aql - The aql to be executed

+ Response 200 (application/json)
    
        {
            "_type": "RESULTSET",
            "@schemaversion": "0.1.0",
            "_type": "raw",
            "@created": "2016-06-22T07:54:04.758+02:00",
            "@generator": "<The resultset generator>",
            "total_results": 2,
            "columns": [
                {
                    "name": "When",
                    "path": "/data[at0002]/events[at0003]/time"
                },
                {
                    "name": "Temperature",
                    "path": "/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value"
                }
            ],
            "rows": [
                [
                    {
                        "_type": "DV_DATE_TIME",
                        "value": "2016-06-08T11:02:47+02:00"
                    },
                    {
                        "_type": "DV_QUANTITY",
                        "magnitude": 38.0,
                        "units": "?C"
                    }
                ],
                [
                    {
                        "_type": "DV_DATE_TIME",
                        "value": "2016-06-05T08:53:36+02:00"
                    },
                    {
                        "_type": "DV_QUANTITY",
                        "magnitude": 37.0,
                        "units": "Cel"
                    }
                ]
            ]
        }

### Execute AQL query [POST /query/aql]

Execute an AQL query.

NOTE: we might add a header to indicate which EHR to execute against to
allow systems that need to route based of EHR id to do so without having
to analyze the request body.

+ Request (application/json)

    + Body

            {
                "aql": "<the aql to be performed>",
                "aqlParameters": [{
                    "parameter-x-name": "paramater-x-value",
                    "parameter-y-name": "parameter-y-value"
                }],
                "offset": NUMBER_TO_START_FROM,
                "fetch": NUMBER_TO_FETCH,
                "composition_uids": ["<object_id>"], // filter on the given compositions uids
                "ehr_ids": ["<ehr_id>"] // filter on the given ehr_ids
            }

+ Response 200

                {
                    "_type": "RESULTSET",
                    "@schemaversion": "0.1.0",
                    "_type": "raw",
                    "@created": "2016-06-22T07:54:04.758+02:00",
                    "@generator": "<The resultset generator>",
                    "total_results": 2,
                    "columns": [{
                            "name": "When",
                            "path": "/data[at0002]/events[at0003]/time"
                        },
                        {
                            "name": "Temperature",
                            "path": "/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value"
                        }
                    ],
                    "rows": [
                        [{
                                "_type": "DV_DATE_TIME",
                                "value": "2016-06-08T11:02:47+02:00"
                            },
                            {
                                "_type": "DV_QUANTITY",
                                "magnitude": 38.0,
                                "units": "?C"
                            }
                        ],
                        [{
                                "_type": "DV_DATE_TIME",
                                "value": "2016-06-05T08:53:36+02:00"
                            },
                            {
                                "_type": "DV_QUANTITY",
                                "magnitude": 37.0,
                                "units": "Cel"
                            }
                        ]
                    ]
                }
