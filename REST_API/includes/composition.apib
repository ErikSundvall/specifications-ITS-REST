## COMPOSITION [/ehrs/{ehr_id}/compositions]

This resource is related to [COMPOSITION](http://www.openehr.org/releases/RM/latest/docs/ehr/ehr.html#_composition_class) described in the openEHR specification  

### Create composition [POST /ehrs/{ehr_id}/compositions]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value

+ Request

    + Body (application/json)

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

    + Headers

            Prefer: return=representation

+ Response 201

    New COMPOSITION was created. Content body is only returned when `Prefer` header has `return=representation` otherwise only headers are returned.

    + Headers

            Location: /ehrs/{ehr_id}/compositions/{version_uid}
            ETag: {version_uid}

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

+ Response 400

    Bad request: either the body of the request could not be read (or converted to a COMPOSITION object) or there were COMPOSITION validation errors.

    + Body

            {
                "message": "Error message",
                "validationErrors": [
                    "error1", "error2"
                ]
            }

+ Response 404

    No EHR with the supplied `ehr_id`.

    + Body


### Update composition [PUT /ehrs/{ehr_id}/compositions/{object_id}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `object_id` (string) - identifier of the COMPOSITION to update, taken from COMPOSITION.uid.value. 
    This can be an exact `version_uid` or `versioned_object_uid`.
    If `version_uid` is supplied, it must be the last (most recent) version.
    If `versioned_object_uid` is supplied, a `Match-If` header must also be supplied containing the latest `version_uid` which must match for operation to succeed.

+ Request

    + Body (application/json)

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

    + Headers

            Match-If: {preceding_version_uid}
            Prefer: return=representation

+ Response 200 (application/json)

    Returned when `Prefer` header is set to `return=representation`.

    + Headers

            Content-Location: /ehrs/{ehr_id}/compositions/{version_uid}
            ETag: {version_uid}

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

+ Response 204

    Returned when `Prefer` header is missing or NOT set to `return=representation`.

    + Headers

            Content-Location: /ehrs/{ehr_id}/compositions/{version_uid}
            ETag: {version_uid}

+ Response 400 (application/json)

    Bad request: either the body of the request could not be read (or converted to a COMPOSITION object) or there were composition validation errors.

    + Body

            {
                "message": "Error message",
                "validationErrors": [
                    "error1", "error2"
                ]
            }

+ Response 404

    No EHR with the supplied `ehr_id` or no COMPOSITION with the supplied `object_id`.

    + Body

+ Response 412

    Returned when:
    - supplied `object_id` is `versioned_object_uid` and `Match-If` header doesn't match the latest version
    - supplied `object_id` is `version_uid` and it's not the latest version

    Returns latest version in the `Content-Location` and `ETag` headers.

    + Headers

            Content-Location: /ehrs/{ehr_id}/compositions/{version_uid}
            ETag: {version_uid}

    + Body

### Delete composition [DELETE /ehrs/{ehr_id}/compositions/{object_id}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `object_id` (string) - identifier of the COMPOSITION to delete, taken from COMPOSITION.uid.value. 
    This can be an exact `version_uid` or `versioned_object_uid`.
    In case of `version_uid` it has to be the latest version.
    In case of `versioned_object_uid`, a `Match-If` must be supplied with the latest `version_uid` which must match before operation can succeed.

+ Request

    + Headers

            Match-If: {preceding_version_uid}

+ Response 204

    COMPOSITION was deleted.

    + Headers

            Content-Location: /ehrs/{ehr_id}/compositions/{version_uid}
            ETag: {version_uid}

    + Body

+ Response 404

    No EHR with the supplied `ehr_id` or no COMPOSITION with the supplied `object_id`.

    + Body

+ Response 412

    Returned when:
    - supplied `object_id` is `versioned_object_uid` and `Match-If` header doesn't match the latest version
    - supplied `object_id` is `version_uid` and it's not the latest version

    Returns latest version in the `Content-Location` and `ETag` headers.

    + Headers

            Content-Location: /ehrs/{ehr_id}/compositions/{version_uid}
            ETag: {version_uid}

    + Body


### Get composition by version id [GET /ehrs/{ehr_id}/compositions/{version_uid}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `version_uid` (string) - VERSION identifier taken from COMPOSITION.uid.value

+ Response 200 (application/json)

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

+ Response 404

    No EHR with the supplied `ehr_id` or no COMPOSITION with the supplied `version_uid`.

    + Body

### Get composition at time [GET /ehrs/{ehr_id}/compositions/{versioned_object_uid}{?version_at_time}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `versioned_object_uid` (string) - VERSIONED_COMPOSITION identifier taken from COMPOSITION.uid.value
    + `version_at_time` (string, optional) - A timestamp in the ISO8601 format

+ Response 200 (application/json)

    + Headers

            Content-Location: /ehrs/{ehr_id}/compositions/{version_uid}
            ETag: {version_uid}

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

+ Response 204 (application/json)

    No COMPOSITION at specified `version_at_time`.

    + Body

+ Response 404

    No EHR with the supplied `ehr_id` or no VERSIONED_COMPOSITION with the supplied `versioned_object_uid`.

    + Body



## VERSIONED_COMPOSITION [/ehrs/{ehr_id}/versioned_compositions]

This resource is related to [VERSIONED_COMPOSITION](http://www.openehr.org/releases/RM/latest/docs/ehr/ehr.html#_versioned_composition_class) described in the openEHR specification  

### Get versioned composition [GET /ehrs/{ehr_id}/versioned_compositions/{versioned_object_uid}]

Gets a complete VERSIONED_COMPOSITION.

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `versioned_object_uid` (string) - VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value

+ Response 200 (application/json)

    + Headers

            Location: /ehrs/{ehr_id}/versioned_compositions/{versioned_object_uid}

    + Body

            {
                "uid": "xxx",
                "owner_id": "{ehr_id}",
                "time_created": "ISO8601 timestamp",
                "version_count: 12,
                "all_version_ids": [
                    "versioned_uid1",
                    "versioned_uid2",
                    ...
                ]
            }

+ Response 404

    No EHR with the supplied `ehr_id` or no VERSIONED_COMPOSITION with the supplied `versioned_object_uid`.

    + Body


### Get versioned composition version by id [GET /ehrs/{ehr_id}/versioned_compositions/{versioned_object_uid}/versions/{version_uid}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `versioned_object_uid` (string) - VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value
    + `version_uid` (string) - VERSIONED identifier taken from VERSIONED.uid.value

+ Response 200 (application/json)

    + Body

            {
                "contribution": {},
                "signature": "...",
                "commit_audit": {},
                "uid": "...",
                "data": {
                    "_type": "COMPOSITION",
                    "name": {
                        "_type": "DV_TEXT",
                        "value": "Vital Signs"
                    }
                    ...
                }
            }

+ Response 404

    No EHR with the supplied `ehr_id` or no VERSIONED_COMPOSITION with the supplied `versioned_object_uid` or no VERSION with the supplied `versione_uid`.

    + Body

### Get versioned composition version at time [GET /ehrs/{ehr_id}/versioned_compositions/{versioned_object_uid}/versions{?version_at_time}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `versioned_object_uid` (string) - VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value
    + `version_at_time` (string, optional) - A timestamp in the ISO8601 format

+ Response 200 (application/json)

    + Headers

            Location: /ehrs/{ehr_id}/versioned_compositions/{versioned_object_uid}/versions/{version_uid}
            ETag: {version_uid}

    + Body

            {
                "contribution": {},
                "signature": "...",
                "commit_audit": {},
                "uid": "...",
                "data": {
                    "_type": "COMPOSITION",
                    "name": {
                        "_type": "DV_TEXT",
                        "value": "Vital Signs"
                    }
                    ...
                }
            }

+ Response 404

    No EHR with the supplied `ehr_id` or no VERSIONED_COMPOSITION with the supplied `versioned_object_uid` or no VERSION with the supplied `versione_uid`.

    + Body
