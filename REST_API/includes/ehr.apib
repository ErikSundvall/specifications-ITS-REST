## EHR [/ehr]

Release: **`0.9.0`**

Management of EHRs.

### Create EHR [POST /ehr]

Create a new `EHR` with an auto-generated identifier.
Request body may contain `ehr_status` attribute. When provided it
will also be created as part of the same request,
otherwise default resources will be created automatically by the service
with the following defaults:
- `is_queryable`: true
- `is_modifiable`: true

All other attributes will be left empty (null).


+ Request

    + Headers

            Prefer: return={representation|minimal}

    + Body

            {
                "ehr_status": {
                  "subject": {
                      "external_ref": {
                        "id": {
                          "_type": "GENERIC_ID",
                          "value": "ins01",
                          "scheme": "id_scheme"
                        },
                        "namespace": "ehr_craft",
                        "type": "PERSON"
                      }
                  },
                  "other_details": {                           /* optional, ITEM_STRUCTURE, archetypable */
                    "_type": "ITEM_TREE",
                    "items": {
                      ...
                    }
                  },
                  "is_modifiable": "true",
                  "is_queryable": "true"
                }
            }

+ Response 201 (application/json)

    `201 Created` is returned when a new EHR has been successfully created. 
    The EHR resource is returned in the body when the `Prefer` header has the value of `return=representation`.
    The default for `Prefer` header (or when `Prefer` header if missing) is `return=minimal`.
    The `Location` header is always returned.

    + Headers

            Location: /ehr/{ehr_id}

    + Body

            {
                "system_id": {...},
                "ehr_id": {...},
                "ehr_status": "versioned ehr status uid",
                "time_created", "..."
            }

+ Response 400

    `400 Bad Request` is returned when the request body (if provided) could not be parsed.

    + Body

+ Response 409

    `409 Conflict` Unable to create a new EHR due to a conflict with an already existing EHR
    with the same subject id, namespace pair.

    + Body


### Create EHR with id [PUT /ehr/{ehr_id}]

Create a new `EHR` with the specified EHR identifier. 
Request body may contain `ehr_status` attribute. When provided it
will also be created as part of the same request,
otherwise default resources will be created automatically by the service
with the following defaults:
- `is_queryable`: true
- `is_modifiable`: true

All other attributes will be left empty (null).

It is recommended that the supplied `ehr_id` is a UUID, but other formats are also
allowed (http://www.openehr.org/releases/RM/latest/docs/support/support.html#_uid_based_id_class)

+ Parameters

    + ehr_id (string) - User supplied EHR id

+ Request

    + Headers

            Prefer: return={representation|minimal}

    + Body

            {
                "ehr_status": {
                  "is_modifiable": "true"
                  ...
                }
            }

+ Response 201 (application/json)

    `201 Created` is returned when a new EHR has been successfully created. 
    The new EHR resource is returned in the body when the request's `Prefer` header value is `return=representation`.

    + Headers

            Location: /ehr/{ehr_id}

    + Body

            {
                "system_id": {},
                "ehr_id": {},
                "ehr_status": "versioned ehr status uid",
                "time_created", "..."
            }

+ Response 400

    `400 Bad Request` is returned when unable to parse the request body (if provided) or when supplied `ehr_id`
    doesn't follow the specification (http://www.openehr.org/releases/RM/latest/docs/support/support.html#_uid_based_id_class).

    + Body

+ Response 409

    `409 Conflict` Unable to create a new EHR due to a conflict with an already existing EHR.
    Can happen when the supplied ehr_id is already already used by an existing EHR.

    + Body


### Get EHR summary by id [GET /ehr/{ehr_id}]
Retrieve the EHR with the specified `ehr_id`.

+ Parameters

    + ehr_id (string) - EHR identifier

+ Response 200 (application/json)

    `200 OK` is returned when the EHR resource is successfully retrieved. 
    
    + Body

            {
                "system_id": {},
                "ehr_id": {},
                "ehr_status": "versioned ehr status uid",
                "time_created", "...",
                ... // to be defined, possibly counts of compositions, contributions, etc.
            }

+ Response 404

    `404 Not Found` is returned when an `EHR` with `ehr_id` does not exist.

    + Body


### Get EHR summary by subject id [GET /ehr{?subject_id,subject_namespace}]
Retrieve the EHR with the specified `subject_id` and `subject_namespace`.

+ Parameters

    + subject_id (string) - subject id
    + subject_namespace (string) - subject namespace

+ Response 200 (application/json)

    `200 OK` is returned when the EHR resource is successfully retrieved.

    + Body

            {
                "system_id": {},
                "ehr_id": {},
                "ehr_status": "versioned ehr status uid",
                "time_created", "...",
                ... // to be defined, possibly counts of compositions, contributions, etc.
            }

+ Response 404

    `404 Not Found` is returned when an `EHR` with supplied subject parameters does not exist.

    + Body
