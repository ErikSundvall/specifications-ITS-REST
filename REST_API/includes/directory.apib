## Directory [/ehr/{ehr_id}/directory]

### Create directory [POST /ehr/{ehr_id}/directory{?version_lifecycle_state,preceding_version_uid}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + version_lifecycle_state (string) - The version Lifecycle State (532=complete, 553=incomplete, 523=deleted)
    + preceding_version_uid (string, optional) - This will result in a new Folder based on the preceding Folder version.

+ Request (application/json)

    + Body

            {
                "items": [...],
                "folders": [{}]
            }

    + Headers

            Prefer: return={representation|minimal}

+ Response 201 (application/json)

    New directory was created. Content body is only returned when
    `Prefer` header has `return=representation` otherwise only headers are
    returned.

    + Headers

            Location: /ehr/{ehr_id}/directory/{version_uid}
            ETag: {version_uid}

    + Body

            {
                "uid": "...",
                "items": [...],
                "folders": [{}]
            }

+ Response 400

    Bad request - error creating a directory.

    + Body

+ Response 404

    No EHR with the given id.

    + Body


### Update directory [PUT /ehr/{ehr_id}/directory]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value

+ Request (application/json)

    + Body

            {
                "items": [...],
                "folders": [{}]
            }

    + Headers

            Match-If: {preceding_version_uid}
            Prefer: return={representation|minimal}

+ Response 200 (application/json)

    Directory was updated.

    + Headers

            Location: /ehr/{ehr_id}/directory/{version_uid}
            ETag: {version_uid}

    + Body

            {
                "uid": "...",
                "items": [...],
                "folders": [{}]
            }

+ Response 204

    Directory was updated.
    Returned when `Prefer` header is NOT set to `return=representation`.

    + Headers

            Location: /ehr/{ehr_id}/directory/{version_uid}
            ETag: {version_uid}

+ Response 400

    Bad request - error when updating a directory.

    + Body

+ Response 404

    No EHR with the given id.

    + Body

+ Response 412

    `Match-If` header doesn't match the last version. Returns last version in the `Location` and `ETag` headers.

    + Headers

            Location: /ehr/{ehr_id}/directory/{version_uid}
            ETag: {version_uid}

    + Body


### Delete directory [DELETE /ehr/{ehr_id}/directory]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value

+ Request

    + Headers

            Match-If: {preceding_version_uid}

+ Response 204

    Directory was deleted.

    + Body

+ Response 400

    Bad request - error deleting directory.

    + Body

+ Response 404

    No EHR with the given id.

    + Body

+ Response 412

    `Match-If` header doesn't match the last version. Returns
    last version in the `Location` and `ETag` headers.

    + Headers

            Location: /ehr/{ehr_id}/directory/{version_uid}
            ETag: {version_uid}

    + Body

### Get folder in directory version [GET /ehr/{ehr_id}/directory/{version_uid}{?path}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + version_uid (string) - version UID
    + path (string, optional) - path to a Folder

+ Response 200 (application/json)

    + Body

            {
                "uid": "...",
                "items": [...],
                "folders": [{}]
            }

+ Response 204

    No Folder at provided path.

    + Body

+ Response 404

    No EHR with the given id or no directory with specified version_uid.

    + Body


### Get folder in directory version at time [GET /ehr/{ehr_id}/directory{?version_at_time,path}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `version_at_time` (string, optional) - A timestamp in the ISO8601 format
    + path (string, optional) - path to a sub-folder

+ Response 200 (application/json)

    + Headers

            Location: /ehr/{ehr_id}/directory/{version_uid}
            ETag: {version_uid}

    + Body

            {
                "uid": "...",
                "items": [...],
                "folders": [{}]
            }

+ Response 204

    EHR has no directory at `version_at_time` time or no Folder at provided path.

    + Body

+ Response 404

    No EHR with the given id.

    + Body

