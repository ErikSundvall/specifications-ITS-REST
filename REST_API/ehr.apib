FORMAT: 1A
HOST: http://www.openehr.org/api

<!-- include(header.apib) -->

# Group EHR

## EHR [/ehrs]

Management of EHR resources.

### Create a new EHR [POST /ehrs{?subject_id,subject_namespace,subject_type}]

Create a new `EHR` with an auto-generated identifier.
Request body may contain `ehr_status` and `ehr_access` attributes. When provided these
resources will also be created as part of the `create EHR` action, 
otherwise default resources will be created automatically by the service.

+ Request

    + Headers

            Prefer: return={representation|minimal}
            
            
    + Parameters
        + subject_id (string, optional) - id of the patient associated with the EHR (for EHR_STATUS.subject.external_ref.id.value)
        + subject_namespace (string, optional) - namespece of the type of the subject, if not specified, value is "DEMOGRAPHIC"
        + subject_type (string, optional) - type of subject, if not specified, value is "PERSON"


    + Body

            {
                "commit_audit": {
                    "description": "Commit audit description",
                    "committer": {"$type": "PARTY_IDENTIFIED", ... }
                },
                "ehr_status": {
                  "is_modifiable": "true"
                  ...
                }
            }

+ Response 201 (application/json)

    `201 Created` is returned when a new EHR has been successfully created. 
    The EHR resource is returned in the body when the `Prefer` header has the value of `return=representation`.

    + Headers

            Location: /ehrs/{ehrId}

    + Body

            {
                "system_id": {...},
                "ehr_id": {...},
                "ehr_status": "versioned ehr status uid",
                "time_created", "..."
            }

+ Response 400

    '400 Bad Request' is returned when unable to create a new EHR due to bad client Request, e.g. malformed syntax.

    + Body

+ Response 401

    `401 Unauthorized` is returned when request is not authorised to be performed.

    + Body


### Create a new EHR with custom (user supplied) ehrId [PUT /ehrs/{ehrId}{?subject_id,subject_namespace,subject_type}]

Create new `EHR` with the specified EHR identifier. 
The request body may contain `ehr_status` and `ehr_access` attributes, 
which will be used to create these initial resources associated with the new EHR.
When the `ehr_status` or `ehr_access` attributes are not provided, defaults resources 
will be created by the service.

+ Request

    + Parameters
        + ehrId (string) - EHR identifier
        + subject_id (string, optional) - id of the patient associated with the EHR (for EHR_STATUS.subject.external_ref.id.value)
        + subject_namespace (string, optional) - namespece of the type of the subject, if not specified, value is "DEMOGRAPHIC"
        + subject_type (string, optional) - type of subject, if not specified, value is "PERSON"

    + Headers

            Prefer: return={representation|minimal}

    + Body

            {
                "commit_audit": {
                    "description": "Commit audit description",
                    "committer": {"$type": "PARTY_IDENTIFIED", ... }
                },
                "ehr_status": {...}
            }

+ Response 201 (application/json)

    `201 Created` is returned when a new EHR has been successfully created. 
    The new EHR resource is returned in the body when the request's `Prefer` header value is `return=representation`.

    + Headers

            Location: /ehrs/{ehrId}

    + Body

            {
                "system_id": {},
                "ehr_id": {},
                "ehr_status": "versioned ehr status uid",
                "time_created", "..."
            }

+ Response 400

    '400 Bad Request' is returned when unable to create a new EHR due to bad client Request, e.g. malformed syntax such as the 'ehrId' not a valid HIER_OBJECT_ID value.

    + Body

+ Response 401

    `401 Unauthorized` is returned when request is not authorised to be performed.

    + Body

+ Response 409

    Unable to create a new EHR due to a conflict with the current state of the resource. Can happen when the supplied ehrId already exists.

    + Body


### Get EHR [GET /ehrs/{ehrId}]
Retrieve the EHR with the specified `ehrId`.

+ Parameters
    + ehrId (string) - EHR identifier

+ Response 200 (application/json)
    `200 OK` is returned when the EHR resource is successfully retrieved. 
    
    + Body

            {
                "system_id": {},
                "ehr_id": {},
                "ehr_status": "versioned ehr status uid",
                "time_created", "...",
                ... // to be defined, possibly counts of compositions, contributions, etc.
            }

+ Response 400
    `400 Bad Request` is returned when the request has invalid content such as an invalid `ehrId` value. // PP: what is an invalid ehdId? are we validating format? not empty? it is better to make it opaque, if it comes and there is no EHR with that id, return 404.

    + Body
    
+ Response 401
    `401 Unauthorized` is returned when request is not authorised.

    + Body

+ Response 404

    `404 Not Found` is returned when an `EHR` with `ehrId` does not exist.

    + Body
