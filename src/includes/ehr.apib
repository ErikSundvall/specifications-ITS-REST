## EHR [/ehr]

Management of [EHRs](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_class).


### Create EHR [POST /ehr]

Create a new `EHR` with an auto-generated identifier.

An EHR_STATUS resource needs to be always created and committed in the new EHR.
This resource MAY be also supplied by the client as the request body. 
If not supplied, a default EHR_STATUS with the following attributes SHOULD be used by the service:  
- `is_queryable`: true
- `is_modifiable`: true
- `subject`: a PARTY_SELF object

All other required EHR attributes and resources will be automatically created as needed by the
[EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).


+ Request

    + Headers

            Prefer: return={representation|minimal}

    + Body

<!-- include(../examples/ehr_status_01.json) -->

+ Response 201 (application/json)

    `201 Created` is returned when a new EHR has been successfully created. 
    The EHR resource is returned in the body when the `Prefer` header has the value of `return=representation`.
    The default for `Prefer` header (or when `Prefer` header if missing) is `return=minimal`.
    The `Location` header is always returned.

    + Headers

            Location: {baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398
            ETag: 7d44b88c-4199-4bad-97dc-d78268e01398

    + Body

            {
                "system_id": {...},
                "ehr_id": {...},
                "ehr_status": {...},
                "time_created", "..."
            }

+ Response 400

    `400 Bad Request` is returned when the request body (if provided) could not be parsed.

    + Body

+ Response 409

    `409 Conflict` Unable to create a new EHR due to a conflict with an already existing EHR
    with the same subject id, namespace pair.

    + Body


### Create EHR with id [PUT /ehr/{ehr_id}]

Create a new `EHR` with the specified EHR identifier. 

An EHR_STATUS resource needs to be always created and committed in the new EHR.
This resource MAY be also supplied by the client as the request body. 
If not supplied, a default EHR_STATUS with the following attributes SHOULD be used by the service:  
- `is_queryable`: true
- `is_modifiable`: true
- `subject`: a PARTY_SELF object

All other required EHR attributes and resources will be automatically created as needed by the
[EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).

It is recommended that the supplied `ehr_id` is a UUID, but other formats are also
allowed (https://specifications.openehr.org/releases/BASE/latest/base_types.html#_hier_object_id_class)

+ Parameters

    + ehr_id: `7d44b88c-4199-4bad-97dc-d78268e01398` (string) - User supplied EHR identifier

+ Request

    + Headers

            Prefer: return={representation|minimal}

    + Body

<!-- include(../examples/ehr_status_01.json) -->

+ Response 201 (application/json)

    `201 Created` is returned when a new EHR has been successfully created. 
    The new EHR resource is returned in the body when the request's `Prefer` header value is `return=representation`.

    + Headers

            Location: {baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398
            ETag: 7d44b88c-4199-4bad-97dc-d78268e01398

    + Body

            {
                "system_id": {},
                "ehr_id": {},
                "ehr_status": {},
                "time_created", "..."
            }

+ Response 400

    `400 Bad Request` is returned when unable to parse the request body (if provided) or when supplied `ehr_id`
    doesn't follow the specification (https://specifications.openehr.org/releases/BASE/latest/base_types.html#_hier_object_id_class).

    + Body

+ Response 409

    `409 Conflict` Unable to create a new EHR due to a conflict with an already existing EHR.
    Can happen when the supplied `ehr_id` is already used by an existing EHR.

    + Body


### Get EHR summary by id [GET /ehr/{ehr_id}]

Retrieve the EHR with the specified `ehr_id`.

+ Parameters

    + ehr_id: `7d44b88c-4199-4bad-97dc-d78268e01398` (string) - EHR identifier

+ Response 200 (application/json)

    `200 OK` is returned when the requested EHR resource is successfully retrieved. 
    
    + Body

            {
                "system_id": {},
                "ehr_id": {},
                "ehr_status": {},
                "time_created", "...",
                ... // to be defined, possibly counts of compositions, contributions, etc.
            }

+ Response 404

    `404 Not Found` is returned when an EHR with `ehr_id` does not exist.

    + Body


### Get EHR summary by subject id [GET /ehr{?subject_id,subject_namespace}]

Retrieve the EHR with the specified `subject_id` and `subject_namespace`.

+ Parameters

    + subject_id (string) - subject id
    + subject_namespace (string) - subject namespace

+ Response 200 (application/json)

    `200 OK` is returned when the requested EHR resource is successfully retrieved.

    + Body

            {
                "system_id": {},
                "ehr_id": {},
                "ehr_status": {},
                "time_created", "...",
                ... // to be defined, possibly counts of compositions, contributions, etc.
            }

+ Response 404

    `404 Not Found` is returned when an EHR with supplied subject parameters does not exist.

    + Body
