## Execute Query [/query]

This currently supports [AQL](https://specifications.openehr.org/releases/QUERY/latest/AQL.html) queries only, 
other types might be added at a later time. 


### Execute ad-hoc (non-stored) AQL query [GET /query/aql{?q,ehr_id,offset,fetch,query_parameter}]

Warning: URIs in practice have a length restriction. Long AQLs in parameter `q` and many long
`query_parameter`'s may add up to reach that limit, thus we recommend using the
`POST {baseUrl}/query/aql` instead when such risks are expected.

+ Parameters
    + q: `SELECT ... WHERE ...` (string) - the AQL query to be executed
    + ehr_id: `7d44b88c-4199-4bad-97dc-d78268e01398` (string, optional) - an optional parameter to execute the query within an EHR context
    + offset: `10` (number, optional) - row number in result-set to start result-set from (`0`-based), default `0`
    + fetch: `10` (number, optional) - number of rows to fetch, default depends on the implementation
    + query_parameter (optional) - query parameters (can appear multiple times)

+ Response 200 (application/json)

    + Headers

            ETag: cdbb5db1-e466-4429-a9e5-bf80a54e120b

    + Body

<!-- include(../examples/query_resultset_01.json) -->

+ Response 400 

    Invalid input, e.g. a request with missing `q` parameter or an invalid query syntax. 

    + Body

+ Response 408 

    Query execution timeout (i.e. maximum query execution time reached and it was therefore stopped by the server).
    
    + Body


### Execute ad-hoc (non-stored) AQL query [POST /query/aql]

+ Request (application/json)

    + Body

            {
                "q": "SELECT c FROM EHR e[ehr_id/value=$ehr_id] CONTAINS COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1] CONTAINS OBSERVATION obs[openEHR-EHR-OBSERVATION.blood_pressure.v1] WHERE obs/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/magnitude >= $systolic_bp",
                "offset": 0,
                "fetch": 10,
                "query_parameters": {
                    "ehr_id": "7d44b88c-4199-4bad-97dc-d78268e01398", 
                    "systolic_bp": 140
                }
            }

+ Response 200 (application/json)

    + Headers

            ETag: cdbb5db1-e466-4429-a9e5-bf80a54e120b

    + Body

<!-- include(../examples/query_resultset_01.json) -->

+ Response 400 

    Invalid input, e.g. a request with missing `q` parameter or an invalid query syntax. 

    + Body

+ Response 408 

    Query execution timeout (i.e. maximum query execution time reached and it was therefore stopped by the server).

    + Body


### Execute stored query [GET /query/{qualified_query_name}/{version}{?ehr_id,offset,fetch,query_parameter}]

All query parameters found except `offset` and `fetch` are sent to the query execution engine.
For AQL queries `fetch` cannot be combined with [AQL-top](https://specifications.openehr.org/releases/QUERY/latest/AQL.html#_top).

For parameters in AQL queries, see [AQL-parameters](https://specifications.openehr.org/releases/QUERY/latest/AQL.html#_parameters).
For example call:

    - GET {baseUrl}/query/com.vendor::compositions?temperature_from=36&temperature_unit=Cel

Will pass parameters `temperature_from` and `temperature_unit` to the underlying query.

+ Parameters

    + qualified_query_name: `org.openehr::compositions` (string, required) - name of the query to be executed
    + version: `1.0` (string, optional) - query SEMVER version number
    + ehr_id: `7d44b88c-4199-4bad-97dc-d78268e01398` (string, optional) - an optional parameter to execute the query within an EHR context
    + offset: `10` (number, optional) - row number in result-set to start result-set from (`0`-based), default `0`
    + fetch: `10` (number, optional) - number of rows to fetch, default depends on the implementation
    + query_parameter (optional) - query parameters (can appear multiple times)

+ Response 200 (application/json)

    + Headers

            ETag: cdbb5db1-e466-4429-a9e5-bf80a54e120b

    + Body

<!-- include(../examples/query_resultset_01.json) -->

+ Response 400 

    Invalid input, e.g. at least on of the parameters has an invalid syntax. 

    + Body

+ Response 404 

    No query found with given `qualified_query_name` name and `version`. 

    + Body

+ Response 408 

    Query execution timeout (i.e. maximum query execution time reached and it was therefore stopped by the server).

    + Body


### Execute stored query [POST /query/{qualified_query_name}/{version}]

Execute a stored query with the supplied `qualified_query_name`.

The absence of the `openEHR-EHR-id` request header means that the stored query or request parameters MAY contain a list of several `ehr_id`'s or be
unconstrained regarding `ehr_id` (e.g. population queries).

+ Parameters

    + qualified_query_name: `org.openehr::compositions` (string, required) - name of the query to be executed
    + version: `1.0` (string, optional) - query SEMVER version number

+ Request (application/json)

    + Headers

            If-None-Match: cdbb5db1-e466-4429-a9e5-bf80a54e120b

    + Body

            {
                "offset": 0,
                "fetch": 10,
                "query_parameters": {
                    "ehr_id": "7d44b88c-4199-4bad-97dc-d78268e01398", 
                    "systolic_bp": 140
                }
            }

+ Response 200 (application/json)

    + Headers

            ETag: cdbb5db1-e466-4429-a9e5-bf80a54e120b

    + Body

<!-- include(../examples/query_resultset_01.json) -->

+ Response 400 

    Invalid input, e.g. at least on of the parameters has an invalid syntax. 

    + Body

+ Response 404 

    No query found with given `qualified_query_name` name and `version`. 

    + Body

+ Response 408 

    Query execution timeout (i.e. maximum query execution time reached and it was therefore stopped by the server).

    + Body
